{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst userService = require('./userService');\nexport const getUsers = createAsyncThunk(\"get-all-users\", async data => {\n  try {\n    return await userService.getUsersS(data);\n  } catch (error) {\n    return thankYou.rejectWithValue(error);\n    // console.log(error);\n  }\n});\n\nexport const createUser = createAsyncThunk(\"create-user\", async (data, thankYou) => {\n  try {\n    return await userService.createAccount(data);\n  } catch (error) {\n    return thankYou.rejectWithValue(error);\n  }\n});\nconst initialState = {\n  user: [],\n  isLoading: false,\n  isError: false,\n  isSuccess: false,\n  message: ''\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createUser.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(createUser.fulfilled, (state, action) => {\n      state.isSuccess = true;\n      state.isError = false;\n      state.isLoading = false;\n      state.user = action.payload;\n    }).addCase(createUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = true;\n    }).addCase(getUsers.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(getUsers.fulfilled, (state, action) => {\n      state.isSuccess = true;\n      state.isError = false;\n      state.isLoading = false;\n      state.user = action.payload;\n    }).addCase(getUsers.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = true;\n      state.message = action.error;\n    });\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","userService","require","getUsers","data","getUsersS","error","thankYou","rejectWithValue","createUser","createAccount","initialState","user","isLoading","isError","isSuccess","message","userSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["/home/mettihew/MERN/book/client/src/store/userSlice.js"],"sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nconst userService = require('./userService')\n\nexport const getUsers = createAsyncThunk(\"get-all-users\", async(data) =>{\n  try {\n    return await userService.getUsersS(data);\n  } catch (error) {\n    return thankYou.rejectWithValue(error);\n    // console.log(error);\n  }\n}\n);\n\n export const createUser = createAsyncThunk( \"create-user\", async (data, thankYou) =>{\n    try {\n      return await userService.createAccount(data);\n    } catch (error) {\n      return thankYou.rejectWithValue(error);\n    }\n  }\n);\n\nconst initialState = {\n  user: [],\n  isLoading: false,\n  isError: false,\n  isSuccess: false,\n  message: ''\n}\n\nconst userSlice = createSlice({\n  name:'user',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>{\n    builder\n      .addCase(createUser.pending, (state, action) => {\n         state.isLoading = true\n      })\n      .addCase(createUser.fulfilled, (state, action) => {\n        state.isSuccess = true\n        state.isError = false\n        state.isLoading = false\n        state.user = action.payload\n      })\n      .addCase(createUser.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = false;\n        state.isError = true;\n      })\n\n\n      .addCase(getUsers.pending, (state, action) => {\n        state.isLoading = true\n     })\n     .addCase(getUsers.fulfilled, (state, action) => {\n       state.isSuccess = true\n       state.isError = false\n       state.isLoading = false\n       state.user = action.payload\n     })\n     .addCase(getUsers.rejected, (state, action) => {\n       state.isLoading = false;\n       state.isSuccess = false;\n       state.isError = true;\n       state.message = action.error\n     })\n  }\n})\n\nexport default userSlice.reducer"],"mappings":"AAAA,SAAQA,gBAAgB,EAAEC,WAAW,QAAO,kBAAkB;AAC9D,MAAMC,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE5C,OAAO,MAAMC,QAAQ,GAAGJ,gBAAgB,CAAC,eAAe,EAAE,MAAMK,IAAI,IAAI;EACtE,IAAI;IACF,OAAO,MAAMH,WAAW,CAACI,SAAS,CAACD,IAAI,CAAC;EAC1C,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOC,QAAQ,CAACC,eAAe,CAACF,KAAK,CAAC;IACtC;EACF;AACF,CACA,CAAC;;AAEA,OAAO,MAAMG,UAAU,GAAGV,gBAAgB,CAAE,aAAa,EAAE,OAAOK,IAAI,EAAEG,QAAQ,KAAI;EACjF,IAAI;IACF,OAAO,MAAMN,WAAW,CAACS,aAAa,CAACN,IAAI,CAAC;EAC9C,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOC,QAAQ,CAACC,eAAe,CAACF,KAAK,CAAC;EACxC;AACF,CACF,CAAC;AAED,MAAMK,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EAC5BkB,IAAI,EAAC,MAAM;EACXP,YAAY;EACZQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAI;IACzBA,OAAO,CACJC,OAAO,CAACb,UAAU,CAACc,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACX,SAAS,GAAG,IAAI;IACzB,CAAC,CAAC,CACDS,OAAO,CAACb,UAAU,CAACiB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACT,SAAS,GAAG,IAAI;MACtBS,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACZ,IAAI,GAAGa,MAAM,CAACE,OAAO;IAC7B,CAAC,CAAC,CACDL,OAAO,CAACb,UAAU,CAACmB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACV,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CAGDQ,OAAO,CAACnB,QAAQ,CAACoB,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5CD,KAAK,CAACX,SAAS,GAAG,IAAI;IACzB,CAAC,CAAC,CACDS,OAAO,CAACnB,QAAQ,CAACuB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACT,SAAS,GAAG,IAAI;MACtBS,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACZ,IAAI,GAAGa,MAAM,CAACE,OAAO;IAC7B,CAAC,CAAC,CACDL,OAAO,CAACnB,QAAQ,CAACyB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACV,OAAO,GAAG,IAAI;MACpBU,KAAK,CAACR,OAAO,GAAGS,MAAM,CAACnB,KAAK;IAC9B,CAAC,CAAC;EACL;AACF,CAAC,CAAC;AAEF,eAAeW,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}