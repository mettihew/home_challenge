{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport userService from './userService';\nexport const getUsers = createAsyncThunk(\"get-all-users\", async (user, thunkAPI) => {\n  try {\n    console.log('slice', user);\n    return await userService.getS(user);\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e);\n  }\n});\nexport const createUser = createAsyncThunk(\"create-user\", async (data, thankYou) => {\n  try {\n    return await userService.createAccount(data);\n  } catch (error) {\n    return thankYou.rejectWithValue(error);\n  }\n});\nconst initialState = {\n  user: [],\n  isLoading: false,\n  isError: false,\n  isSuccess: false,\n  message: ''\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createUser.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(createUser.fulfilled, (state, action) => {\n      state.isSuccess = true;\n      state.isError = false;\n      state.isLoading = false;\n      state.user = action.payload;\n    }).addCase(createUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = true;\n    }).addCase(getUsers.pending, state => {\n      state.isLoading = true;\n    }).addCase(getUsers.fulfilled, (state, action) => {\n      state.isError = false;\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(getUsers.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = true;\n    });\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","userService","getUsers","user","thunkAPI","console","log","getS","e","rejectWithValue","createUser","data","thankYou","createAccount","error","initialState","isLoading","isError","isSuccess","message","userSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["/home/mettihew/MERN/book/client/src/store/userSlice.js"],"sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nimport userService from './userService'\n\nexport const getUsers = createAsyncThunk(\n  \"get-all-users\",\n  async (user, thunkAPI) => {\n    try {\n      console.log('slice', user);\n      return await userService.getS(user);\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e);\n    }\n  }\n);\n\n export const createUser = createAsyncThunk( \"create-user\", async (data, thankYou) =>{\n    try {\n      return await userService.createAccount(data);\n    } catch (error) {\n      return thankYou.rejectWithValue(error);\n    }\n  }\n);\n\nconst initialState = {\n  user: [],\n  isLoading: false,\n  isError: false,\n  isSuccess: false,\n  message: ''\n}\n\nconst userSlice = createSlice({\n  name:'user',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>{\n    builder\n      .addCase(createUser.pending, (state, action) => {\n         state.isLoading = true\n      })\n      .addCase(createUser.fulfilled, (state, action) => {\n        state.isSuccess = true\n        state.isError = false\n        state.isLoading = false\n        state.user = action.payload\n      })\n      .addCase(createUser.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = false;\n        state.isError = true;\n      })\n\n\n      .addCase(getUsers.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(getUsers.fulfilled, (state, action) => {\n        state.isError = false;\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.user = action.payload;\n      })\n      .addCase(getUsers.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = false;\n        state.isError = true;\n      })\n  }\n})\n\nexport default userSlice.reducer"],"mappings":"AAAA,SAAQA,gBAAgB,EAAEC,WAAW,QAAO,kBAAkB;AAC9D,OAAOC,WAAW,MAAM,eAAe;AAEvC,OAAO,MAAMC,QAAQ,GAAGH,gBAAgB,CACtC,eAAe,EACf,OAAOI,IAAI,EAAEC,QAAQ,KAAK;EACxB,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,IAAI,CAAC;IAC1B,OAAO,MAAMF,WAAW,CAACM,IAAI,CAACJ,IAAI,CAAC;EACrC,CAAC,CAAC,OAAOK,CAAC,EAAE;IACV,OAAOJ,QAAQ,CAACK,eAAe,CAACD,CAAC,CAAC;EACpC;AACF,CACF,CAAC;AAEA,OAAO,MAAME,UAAU,GAAGX,gBAAgB,CAAE,aAAa,EAAE,OAAOY,IAAI,EAAEC,QAAQ,KAAI;EACjF,IAAI;IACF,OAAO,MAAMX,WAAW,CAACY,aAAa,CAACF,IAAI,CAAC;EAC9C,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAOF,QAAQ,CAACH,eAAe,CAACK,KAAK,CAAC;EACxC;AACF,CACF,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBZ,IAAI,EAAE,EAAE;EACRa,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGpB,WAAW,CAAC;EAC5BqB,IAAI,EAAC,MAAM;EACXN,YAAY;EACZO,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAI;IACzBA,OAAO,CACJC,OAAO,CAACf,UAAU,CAACgB,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACX,SAAS,GAAG,IAAI;IACzB,CAAC,CAAC,CACDS,OAAO,CAACf,UAAU,CAACmB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACT,SAAS,GAAG,IAAI;MACtBS,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACxB,IAAI,GAAGyB,MAAM,CAACE,OAAO;IAC7B,CAAC,CAAC,CACDL,OAAO,CAACf,UAAU,CAACqB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACV,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CAGDQ,OAAO,CAACvB,QAAQ,CAACwB,OAAO,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAACX,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDS,OAAO,CAACvB,QAAQ,CAAC2B,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACT,SAAS,GAAG,IAAI;MACtBS,KAAK,CAACxB,IAAI,GAAGyB,MAAM,CAACE,OAAO;IAC7B,CAAC,CAAC,CACDL,OAAO,CAACvB,QAAQ,CAAC6B,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACV,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeG,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}