{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// const productService = require(\"./productService\")\nimport productService from \"./productService\";\nconst initialState = {\n  product: [],\n  isError: false,\n  isLoading: false,\n  isSuccess: false\n};\nexport const getProducts = createAsyncThunk('getProducts-books', async thunkAPI => {\n  try {\n    return await productService.getS();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const addBook = createAsyncThunk('new-book', async (data, thunkAPI) => {\n  try {\n    return await productService.newBookS(data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const order = createAsyncThunk('order', async (data, thunkAPI) => {\n  try {\n    return await productService.newBookS(data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getProducts.pending, state => {\n      state.isLoading = true;\n    }).addCase(getProducts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.product = action.payload;\n    }).addCase(getProducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = true;\n    }).addCase(addBook.pending, state => {\n      state.isLoading = true;\n    }).addCase(addBook.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.product = action.payload;\n      alert('Book added successfully');\n    }).addCase(addBook.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = true;\n      alert('reject');\n    });\n\n    // .addCase(addToCart.pending, (state) => {\n    //   state.isLoading = true\n    // })\n    // .addCase(addToCart.fulfilled, (state, action) => {\n    //   state.isLoading = false\n    //   state.isError = false\n    //   state.isSuccess = true\n    //   // state.product = action.payload\n    //   alert('added to cart successfully')\n    // })\n    // .addCase(addToCart.rejected, (state, action) => {\n    //   state.isLoading = false\n    //   state.isSuccess = false\n    //   state.isError = true\n    //   alert('reject')\n    // })\n  }\n});\n\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","productService","initialState","product","isError","isLoading","isSuccess","getProducts","thunkAPI","getS","error","rejectWithValue","addBook","data","newBookS","order","productSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","alert","reducer"],"sources":["/home/mettihew/MERN/book/client/src/feature/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n// const productService = require(\"./productService\")\nimport productService from \"./productService\";\n\nconst initialState = {\n  product: [],\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n}\n\n\nexport const getProducts = createAsyncThunk('getProducts-books', async (thunkAPI) => {\n  try {\n    return await productService.getS()\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error)\n  }\n})\n\nexport const addBook = createAsyncThunk('new-book', async (data, thunkAPI) => {\n  try {\n    return await productService.newBookS(data)\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error)\n  }\n})\n\nexport const order = createAsyncThunk('order', async (data, thunkAPI) => {\n  try {\n    return await productService.newBookS(data)\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error)\n  }\n})\n\n\n\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n\n    .addCase(getProducts.pending, (state) => {\n      state.isLoading = true\n    })\n    .addCase(getProducts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isError = false\n      state.isSuccess = true\n      state.product = action.payload\n    })\n    .addCase(getProducts.rejected, (state, action) => {\n      state.isLoading = false\n      state.isSuccess = false\n      state.isError = true\n    })\n\n\n\n      .addCase(addBook.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(addBook.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isError = false\n        state.isSuccess = true\n        state.product = action.payload\n        alert('Book added successfully')\n      })\n      .addCase(addBook.rejected, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = false\n        state.isError = true\n        alert('reject')\n      })\n\n\n      // .addCase(addToCart.pending, (state) => {\n      //   state.isLoading = true\n      // })\n      // .addCase(addToCart.fulfilled, (state, action) => {\n      //   state.isLoading = false\n      //   state.isError = false\n      //   state.isSuccess = true\n      //   // state.product = action.payload\n      //   alert('added to cart successfully')\n      // })\n      // .addCase(addToCart.rejected, (state, action) => {\n      //   state.isLoading = false\n      //   state.isSuccess = false\n      //   state.isError = true\n      //   alert('reject')\n      // })\n\n  }\n})\n\nexport default productSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}